<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[^memory^blog]]></title>
  <link href="http://jwoffindin.github.io/atom.xml" rel="self"/>
  <link href="http://jwoffindin.github.io/"/>
  <updated>2013-08-23T15:02:43+12:00</updated>
  <id>http://jwoffindin.github.io/</id>
  <author>
    <name><![CDATA[John Woffindin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Migrating AWS Images between regions]]></title>
    <link href="http://jwoffindin.github.io/blog/2013/08/20/migrating-aws-images-between-regions/"/>
    <updated>2013-08-20T10:10:00+12:00</updated>
    <id>http://jwoffindin.github.io/blog/2013/08/20/migrating-aws-images-between-regions</id>
    <content type="html"><![CDATA[<p>We have a project for an Australian client with 3 VPC clusters running in AWS <em>us-west</em>
region (about 40 servers across test, uat and production).
With the opening of a Sydney-based data centre, it makes sense to
migrate to the new location. Unfortunately we run into several issues:</p>

<ul>
<li>Servers are Oracle Enterprise Linux 5.5. The original AMIs are no longer
provided by Oracle, and there are no corresponding Kernel (AKI)
or Ramdisk Image (ARI) in the <code>ap-southeast-2</code>, so using AWS EC2 Copy
<a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/CopyingAMIs.html">does not work</a></li>
<li>Images have an unknown amount of customisation applied, so starting
from scratch isn&rsquo;t an attractive choice if we can avoid it.</li>
<li>The instances and network configuration were done manually using AWS
Console, so no artifacts for reuse.</li>
</ul>


<p>First issue, we can&rsquo;t just snapshot/copy the AMIs because we don&rsquo;t have
matching AKIs/ARIs at the other end.</p>

<p>There are a <a href="http://www.slideshare.net/pleasebiteme/presentation-migrating-aws-ebs-backed-amis-between-regions">couple of presentations</a> which give an introduction to migrating
instances between regions. This should allow us to migrate the 40+
servers to the apac data center.</p>

<p>I implemented a basic export/import script that used staging instances.
The script can be found <a href="git@github.com:jwoffindin/aws-staged-copy.git">here</a></p>

<h3>Create image from snapshot</h3>

<p>architecture <code>x86_64</code>
pv-grub AMI is <code>aki-3d990e07</code>
root device is <code>/dev/sda2</code> not <code>/dev/sda1</code></p>

<h3>#</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ec2-attach-volume vol-f3c1bdc1 --instance i-55538e69 --device /dev/sdk --region ap-southeast-2
</span></code></pre></td></tr></table></div></figure>


<p>On target staging</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>bash &lt;&lt;EOF
</span><span class='line'><span class="nv">device</span><span class="o">=</span><span class="k">$(</span>cat /proc/partitions | awk <span class="s1">&#39;! /xvde/ &amp;&amp; / xvd.[0-9]?/ { print</span>
</span><span class='line'><span class="s1">$4 ; exit }&#39;</span><span class="k">)</span>
</span><span class='line'><span class="nb">export </span><span class="nv">chroot</span><span class="o">=</span>/chroot
</span><span class='line'>mount /dev/<span class="k">${</span><span class="nv">device</span><span class="k">}</span>2 <span class="k">${</span><span class="nv">chroot</span><span class="k">}</span>
</span><span class='line'>mount /dev/<span class="k">${</span><span class="nv">device</span><span class="k">}</span>1 <span class="k">${</span><span class="nv">chroot</span><span class="k">}</span>/boot
</span><span class='line'><span class="k">for </span>d in /dev /sys /dev/shm /proc ; <span class="k">do </span>mount -o <span class="nb">bind</span> <span class="nv">$d</span> <span class="k">${</span><span class="nv">chroot</span><span class="k">}${</span><span class="nv">d</span><span class="k">}</span>; <span class="k">done</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># take 1</span>
</span><span class='line'><span class="nv">$ </span>sudo -i
</span><span class='line'>root <span class="nv">$ </span><span class="nb">export </span><span class="nv">d</span><span class="o">=</span>/chroot
</span><span class='line'>root <span class="nv">$ </span>mkdir <span class="nv">$d</span>
</span><span class='line'>root <span class="nv">$ </span>mount -o <span class="nb">bind</span> /dev <span class="nv">$d</span>/dev
</span><span class='line'>root <span class="nv">$ </span>mount -o <span class="nb">bind</span> /sys <span class="nv">$d</span>/sys
</span><span class='line'>root <span class="nv">$ </span>mount -o <span class="nb">bind</span> /dev/shm <span class="nv">$d</span>/dev/shm
</span><span class='line'>root <span class="nv">$ </span>mount -o <span class="nb">bind</span> /proc <span class="nv">$d</span>/proc
</span><span class='line'>root <span class="nv">$ </span>chroot /chroot
</span><span class='line'>root <span class="nv">$ </span>/sbin/mkinitrd -f -v  --builtin uhci-hcd --builtin ohci-hcd --builtin <span class="se">\</span>
</span><span class='line'> ehci-hcd --preload xennet --preload xenblk --preload dm-mod --preload <span class="se">\</span>
</span><span class='line'> linear --force-lvm-probe /boot/initrd-2.6.18-194.0.0.0.3.el5xen.img <span class="se">\</span>
</span><span class='line'> 2.6.18-194.0.0.0.3.el5xen
</span><span class='line'>root <span class="nv">$ </span><span class="nb">exit</span>
</span></code></pre></td></tr></table></div></figure>


<p>tidy up</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>root@ip-10-240-10-89 ~<span class="o">]</span><span class="c"># for mount in /dev/shm /dev /proc /sys /boot / ; do umount ${d}${mount} ; done</span>
</span></code></pre></td></tr></table></div></figure>


<p>Detaach the volume and create a snapshot</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ REGION</span><span class="o">=</span>ap-southeast-2
</span><span class='line'><span class="nv">$ </span>ec2-detach-volume vol-f3c1bdc1 --region <span class="k">${</span><span class="nv">REGION</span><span class="k">}</span>
</span><span class='line'><span class="nv">$ </span>ec2-create-snapshot vol-f3c1bdc1 --region <span class="k">${</span><span class="nv">REGION</span><span class="k">}</span>
</span><span class='line'><span class="nv">$ SNAP</span><span class="o">=</span>snap-468d4475
</span></code></pre></td></tr></table></div></figure>


<p>Wait for it to become available</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ec2-describe-snapshots <span class="k">${</span><span class="nv">SNAP</span><span class="k">}</span> --region <span class="k">${</span><span class="nv">REGION</span><span class="k">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>and</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ec2-register --region <span class="k">${</span><span class="nv">REGION</span><span class="k">}</span> --name <span class="s2">&quot;Test Image&quot;</span> --description <span class="s2">&quot;Created for testing migration &quot;</span> <span class="se">\</span>
</span><span class='line'>--architecture x86_64 --kernel aki-3d990e07 --root-device-name /dev/sda1 -s <span class="k">${</span><span class="nv">SNAP</span><span class="k">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Launch the instance</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ec2-run-instances --region <span class="k">${</span><span class="nv">REGION</span><span class="k">}</span> ami-890a98b3
</span></code></pre></td></tr></table></div></figure>


<p>Wait for it</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ INSTANCE_ID</span><span class="o">=</span>i-a82cf294
</span><span class='line'>ec2-get-console-output --region <span class="k">${</span><span class="nv">REGION</span><span class="k">}</span> <span class="k">${</span><span class="nv">INSTANCE_ID</span><span class="k">}</span> | less
</span></code></pre></td></tr></table></div></figure>


<p>crap.</p>

<h3>Plan B : Try as a single image, i.e. boot off /dev/sda rather than partition</h3>

<p>This is going to screw up the disk image I&rsquo;ve been using. Oh well.</p>

<p>Start from a fresh copy</p>

<p>$ export SNAP=snap-8faa63bc</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ec2-terminate-instances --region <span class="k">${</span><span class="nv">REGION</span><span class="k">}</span> <span class="k">${</span><span class="nv">INSTANCE_ID</span><span class="k">}</span>
</span><span class='line'><span class="nv">$ </span>ec2-attach-volume vol-f3c1bdc1 --instance i-55538e69 --device /dev/sdk --region ap-southeast-2
</span><span class='line'><span class="nv">$ </span>ssh staging.target
</span><span class='line'><span class="o">[</span>ec2-user<span class="o">]</span> <span class="nv">$ </span>sudo dd <span class="k">if</span><span class="o">=</span>/dev/xvdo2 | gzip -c &gt; /tmp/xvdo2.gz
</span><span class='line'>...wait...
</span><span class='line'><span class="o">[</span>ec2-user<span class="o">]</span> <span class="nv">$ </span>gunzip -c /tmp/xvdo2.gz | sudo dd <span class="nv">of</span><span class="o">=</span>/dev/xvdo
</span><span class='line'><span class="o">[</span>ec2-user<span class="o">]</span> <span class="nv">$ </span>mount /dev/xvdo /mnt
</span><span class='line'><span class="o">[</span>ec2-user<span class="o">]</span> <span class="nv">$ </span><span class="nb">export </span><span class="nv">version</span><span class="o">=</span>
</span><span class='line'><span class="o">[</span>ec2-user<span class="o">]</span> <span class="nv">$ </span><span class="nb">echo</span> <span class="s">&lt;&lt;EOF &gt; /boot/grub/menu.lst</span>
</span><span class='line'><span class="s">default 0</span>
</span><span class='line'><span class="s">timeout 1</span>
</span><span class='line'><span class="s">title My Linux Server (version)</span>
</span><span class='line'><span class="s">        root (hd0)</span>
</span><span class='line'><span class="s">        kernel /boot/vmlinuz-${version} ro root=LABEL=/</span>
</span><span class='line'><span class="s">        initrd /boot/initrd-${version}.img</span>
</span><span class='line'><span class="s">EOF</span>
</span><span class='line'><span class="o">[</span>ec2-user<span class="o">]</span> <span class="nv">$ </span>umount /mnt
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ec2-detach-volume vol-f3c1bdc1 --region <span class="k">${</span><span class="nv">REGION</span><span class="k">}</span>
</span><span class='line'><span class="nv">$ </span>ec2-create-snapshot vol-f3c1bdc1 --region <span class="k">${</span><span class="nv">REGION</span><span class="k">}</span>
</span><span class='line'><span class="nv">$ SNAP</span><span class="o">=</span>snap-468d4475
</span><span class='line'><span class="nv">$ </span>ec2-describe-snapshots <span class="k">${</span><span class="nv">SNAP</span><span class="k">}</span> --region <span class="k">${</span><span class="nv">REGION</span><span class="k">}</span>
</span><span class='line'><span class="nv">$ </span>ec2-register --region <span class="k">${</span><span class="nv">REGION</span><span class="k">}</span> --name <span class="s2">&quot;Test Full-disk image&quot;</span>
</span><span class='line'>--architecture x86_64 --kernel aki-31990e0b --root-device-name /sda -s <span class="k">${</span><span class="nv">SNAP</span><span class="k">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Launch the instance</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ec2-run-instances --region <span class="k">${</span><span class="nv">REGION</span><span class="k">}</span> ami-890a98b3
</span></code></pre></td></tr></table></div></figure>


<h3>Sidetrack : partimage</h3>

<p>Should be able to speed up dump/restore of filesystes</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo yum install partimage
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'> Step 1 : Create a <span class="s2">&quot;lab&quot;</span> environment to <span class="nb">test </span>the migration
</span><span class='line'>
</span><span class='line'>I started two instances in <span class="sb">`</span>us-east-1<span class="sb">`</span> as a trial using <span class="sb">`</span>ami-63d2130a<span class="sb">`</span> AMI Oracle Linux
</span><span class='line'>5.5 x86_64. One will be the image we want to migrate, the other is the
</span><span class='line'><span class="s2">&quot;helper&quot;</span> box that will be used <span class="k">for </span>the migration.
</span></code></pre></td></tr></table></div></figure>


<p>bash
$ mkdir -m 0700 ~/.ssh/aws
$ cp ~/Downloads/orel-migration-test.pem ~/.ssh/aws
$ chmod 0600 ~/.ssh/aws/*</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>add following <span class="sb">`</span>~/.ssh/config<span class="sb">`</span> entries.
</span></code></pre></td></tr></table></div></figure>


<h1>Instane i-585c3f30</h1>

<p>host box-1.source
  Hostname ec2-184-73-48-11.compute-1.amazonaws.com
  User root
  IdentityFile ~/.ssh/aws/orel-migration-test.pem
  PreferredAuthentications publickey</p>

<h1>Instance i-5a5c3f32</h1>

<p>host staging.source
  Hostname ec2-54-211-116-254.compute-1.amazonaws.com
  User root
  IdentityFile ~/.ssh/aws/orel-migration-test.pem
  PreferredAuthentications publickey</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Check connectivity
</span></code></pre></td></tr></table></div></figure>


<p>bash
$ ssh box-1.source echo okay
&hellip;
okay
$ ssh staging.source echo okay
&hellip;
okay
&#8220;`</p>

<h1>Step 2 : Prepare EBS volume for migration</h1>
]]></content>
  </entry>
  
</feed>
